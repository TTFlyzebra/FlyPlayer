apply plugin: 'com.android.application'

//获取当前编译时间
def getCreateTime() {
    def createTime = new Date().format("yyyyMMdd", TimeZone.getTimeZone("GMT+08:00")).trim()
    return createTime
}

/**
 * 获取Git 版本号
 */
def getGitSHA() {
    def gitSHA = 'git rev-parse --short HEAD'.execute().text.trim()
    return gitSHA
}

/**
 * 获取Git 提交次数
 */
def getGitCommitCount() {
    def gitCommitCount = 'git rev-list --count HEAD'.execute().text.trim();
    return gitCommitCount;
}

android {
    compileSdkVersion 23



    defaultConfig {
        applicationId "com.jancar.player.video"
        minSdkVersion 19
        targetSdkVersion 23
        versionCode gitCommitCount.toInteger()
        versionName "v1.0."+gitSHA
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        flavorDimensions "versionCode"
    }

    signingConfigs {
        release {
            storeFile file("../platform.keystore")
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }

        debug {
            storeFile file("../platform.keystore")
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
    }

    sourceSets {
        AP1 {
//            manifest.srcFile 'src/default1/defaultAndroidManifest.xml'
            java.srcDir 'src/AP1/java' // 指定源码目录
            resources.srcDir 'src/AP1/res' //资源目录
        }
        AA1 {
//            manifest.srcFile 'src/volkswagen/volkswagenAndroidManifest.xml'
            java.srcDir 'src/AA1/java' // 指定源码目录
            resources.srcDir 'src/AA1/res' //资源目录
        }

        AA2 {
//            manifest.srcFile 'src/volkswagen/volkswagenAndroidManifest.xml'
            java.srcDir 'src/AA2/java' // 指定源码目录
            resources.srcDir 'src/AA2/res' //资源目录
        }

        AA3 {
//            manifest.srcFile 'src/volkswagen/volkswagenAndroidManifest.xml'
            java.srcDir 'src/AA3/java' // 指定源码目录
            resources.srcDir 'src/AA3/res' //资源目录
        }

        AA4 {
//            manifest.srcFile 'src/volkswagen/volkswagenAndroidManifest.xml'
            java.srcDir 'src/AA4/java' // 指定源码目录
            resources.srcDir 'src/AA4/res' //资源目录
        }
    }

    productFlavors {
        AP1 {
//            manifestPlaceholders = [app_name:"ViewDVR",package_name:"com.longhorn.viewdvr"]
//            applicationId = "com.longhorn.viewdvr"
            versionName "AP1_v1.0."+gitSHA
        }
        AA1 {
//            manifestPlaceholders = [app_name:"VWDVR",package_name:"com.longhorn.viewdvr"]
//            applicationId = "com.longhorn.vwdvr"
            versionName "AA1_v1.0."+gitSHA
        }

        AA2 {
//            manifestPlaceholders = [app_name:"VWDVR",package_name:"com.longhorn.viewdvr"]
//            applicationId = "com.longhorn.vwdvr"
            versionName "AA2_v1.0."+gitSHA
        }

        AA3 {
//            manifestPlaceholders = [app_name:"VWDVR",package_name:"com.longhorn.viewdvr"]
//            applicationId = "com.longhorn.vwdvr"
            versionName "AA3_v1.0."+gitSHA
        }

        AA4 {
//            manifestPlaceholders = [app_name:"VWDVR",package_name:"com.longhorn.viewdvr"]
//            applicationId = "com.longhorn.vwdvr"
            versionName "AA4_v1.0."+gitSHA
        }
    }

    buildTypes {
        release {
//            minifyEnabled true //混淆
//            zipAlignEnabled true//Zipalign优化
//            shrinkResources true// 移除无用的resource文件
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }

        debug {
            signingConfig signingConfigs.debug
        }
    }

    //配置自定义打包名称
    applicationVariants.all { variant ->
        variant.outputs.all {
            def fileName
            if (variant.buildType.name.equals('release')) {
                fileName = "${applicationId}_release_${gitCommitCount}_${createTime}_${versionName}.apk"
            } else if (variant.buildType.name.equals('debug')) {
                fileName = "${applicationId}_debug_${gitCommitCount}_${createTime}_${versionName}.apk"
            }
            outputFileName = fileName;
        }
    }

}

dependencies {
    implementation project(path: ':ijkplayer-java')
    implementation project(path: ':flymedialibrary')
    implementation files('libs/libksystat.jar')
    implementation files('libs/libksyplayer.jar')
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.5'
    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.5'
    compileOnly 'com.android.support:appcompat-v7:23.+'
    compileOnly 'com.android.support:recyclerview-v7:23.+'
}
